openapi: 3.0.0
info:
  title: AKA Project API
  version: 1.0.0
  description: API for managing characters and health checks.
servers:
  - url: /
paths:
  /healthcheck:
    get:
      summary: Health Check
      description: Checks the health of the API, including database and Redis connections.
      responses:
        '200':
          description: Healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
  /characters:
    get:
      summary: Get Characters
      description: Retrieves a list of characters, with optional filtering by species, status, and origin.
      parameters:
        - in: query
          name: species
          schema:
            type: string
          description: Filter by character species
        - in: query
          name: status
          schema:
            type: string
          description: Filter by character status (e.g., Alive, Dead, unknown)
        - in: query
          name: origin
          schema:
            type: string
          description: Filter by character origin
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: A list of characters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharactersResponse'
        '401':
          description: Unauthorized - API Key is missing or invalid
        '404':
          description: Not Found - No characters matching the criteria
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    HealthStatus:
      type: object
      properties:
        status:
          type: string
          description: Overall health status ("ok" or "error")
          example: ok
        checks:
          type: object
          additionalProperties:
            type: string
          description: Detailed health status for individual components
          example:
            database: ok
            redis: ok
    CharactersResponse:
      type: object
      properties:
        info:
          type: object
          properties:
            next:
              type: string
              nullable: true
              description: URL to the next page of results
            prev:
              type: string
              nullable: true
              description: URL to the previous page of results
            count:
              type: integer
              description: Total number of characters
            pages:
              type: integer
              description: Total number of pages
        results:
          type: array
          items:
            $ref: '#/components/schemas/Character'
    CharactersResponse:
      type: object
      properties:
        info:
          type: object
          properties:
            next:
              type: string
              nullable: true
              description: URL to the next page of results
            prev:
              type: string
              nullable: true
              description: URL to the previous page of results
            count:
              type: integer
              description: Total number of characters
            pages:
              type: integer
              description: Total number of pages
          
        results:
          type: array
          items:
            $ref: '#/components/schemas/Character'
          example:
            - id: 1
              name: "Rick Sanchez"
              status: "Alive"
              species: "Human"
              type: ""
              gender: "Male"
              origin:
                name: "Earth"
                url: "https://rickandmortyapi.com/api/location/1"
              location:
                name: "Earth"
                url: "https://rickandmortyapi.com/api/location/20"
              image: "https://rickandmortyapi.com/api/character/avatar/1.jpeg"
              episode:
                - "https://rickandmortyapi.com/api/episode/1"
                - "https://rickandmortyapi.com/api/episode/2"
              url: "https://rickandmortyapi.com/api/character/1"
              created: "2017-11-04T18:48:46.250Z"
    Character:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique identifier for the character
          example: 1
        name:
          type: string
          description: Name of the character
          example: "Rick Sanchez"
        status:
          type: string
          description: Status of the character (e.g., Alive, Dead, unknown)
          example: "Alive"
        species:
          type: string
          description: Species of the character
          example: "Human"
        type:
          type: string
          description: Type of the character
          example: ""
        gender:
          type: string
          description: Gender of the character
          example: "Male"
        origin:
          type: object
          properties:
            name:
              type: string
              example: "Earth"
            url:
              type: string
              format: url
              example: "https://rickandmortyapi.com/api/location/1"
          description: Origin location of the character
        location:
          type: object
          properties:
            name:
              type: string
              example: "Earth"
            url:
              type: string
              format: url
              example: "https://rickandmortyapi.com/api/location/20"
          description: Last known location of the character
        image:
          type: string
          format: url
          description: URL to the character's image
          example: "https://rickandmortyapi.com/api/character/avatar/1.jpeg"
        episode:
          type: array
          items:
            type: string
            format: url
          description: List of episodes the character appeared in
          example:
            - "https://rickandmortyapi.com/api/episode/1"
            - "https://rickandmortyapi.com/api/episode/2"
        url:
          type: string
          format: url
          description: URL to the character's detail page
          example: "https://rickandmortyapi.com/api/character/1"
        created:
          type: string
          format: date-time
          description: Date and time when the character was created
          example: "2017-11-04T18:48:46.250Z"
