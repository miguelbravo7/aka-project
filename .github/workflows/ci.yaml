name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.52.2

      - name: Run linter
        run: golangci-lint run ./...

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run security scanner
        run: gosec ./...

      - name: Run tests
        run: go test ./...

  build_and_push_docker:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: user # TODO: change this to your Docker Hub username
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deploy/Dockerfile
          push: true
          tags: user/aka-project:latest # TODO: change this to your Docker Hub username

  deploy_and_test_helm:
    needs: build_and_push_docker
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up KinD cluster
        uses: helm/kind-action@v1.4.0

      - name: Install Helm chart
        run: |
          helm install my-release deploy/helm --set image.tag=${{ github.sha }}

      - name: Run tests against deployed application
        run: |
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=my-release-aka-project --timeout=120s
          kubectl port-forward service/my-release-aka-project 8080:80 &
          sleep 5
          curl -v http://localhost:8080/healthcheck | grep '"status":"ok"'
